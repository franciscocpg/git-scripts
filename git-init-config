#!/bin/bash -i
# CHANGE indica se está trocando ou criando/verificando
CHANGE="$1"
BASH_RC=~/.bashrc

# Importação
. utils.sh

changeGitProperty() {
	local question="$1"
	local gitProperty="$2"
	GIT_CMD="git config --global $gitProperty"
	if [[ "$CHANGE" != "true" ]]; then
		currentGitPropertyValue=$($GIT_CMD)
		if [[ -n "$currentGitPropertyValue" ]]; then
			return;	
		fi
	fi
	echo "$question"
	read gitPropertyValue
	$GIT_CMD "$gitPropertyValue"
	echo "$gitProperty=$gitPropertyValue"
}

changeGitEnvVariable() {
	local question="$1"
	local gitEnvVariable="$2"
	local gitEnvVariableValue="$3"
	if [[ "$CHANGE" != "true" ]]; then
		CONTAINS_GIT_TIDEXA_VARIABLE=$(cat $BASH_RC | grep $gitEnvVariable)
		if [[ -n "$CONTAINS_GIT_TIDEXA_VARIABLE" ]]; then
			return;
		fi
	fi
	if [[ -z "$gitEnvVariableValue" ]]; then
		echo "$question"
		read gitEnvVariableValue
	fi
	echo "export $gitEnvVariable=$gitEnvVariableValue" >> $BASH_RC
}

changeGitProperty "Entre com seu nome completo" "user.name"
changeGitProperty "Entre com seu e-mail" "user.email"
changeGitEnvVariable "Entre com seu usuário (Pode ser visualizado em Profile -> Accounts)" "TIDEXA_GIT_NAMESPACE"
changeGitEnvVariable "Entre o token privado (Pode ser visualizado em Profile -> Accounts)" "TIDEXA_GITLAB_TOKEN"
changeGitEnvVariable "" "TIDEXA_GIT_URL" "acessa"
changeGitEnvVariable "" "TIDEXA_GITLAB_DOMAIN" "git.tidexa-es.com"
changeGitEnvVariable "" "TIDEXA_GITLAB_API_HOST" "https://"'$TIDEXA_GITLAB_DOMAIN'":9443"
changeGitEnvVariable "" "TIDEXA_GITLAB_API_PATH" "/api/v3"
changeGitEnvVariable "" "TIDEXA_GITLAB_API_URL" '$TIDEXA_GITLAB_API_HOST$TIDEXA_GITLAB_API_PATH'
changeGitEnvVariable "" "TIDEXA_GIT_GLOBAL_NAMESPACE" "global"
changeGitEnvVariable "" "TIDEXA_GIT_DSV_NAMESPACE" "dsv"
changeGitEnvVariable "" "TIDEXA_GIT_GLOBAL_PRIVATE_NAMESPACE" "global-private"
changeGitEnvVariable "" "TIDEXA_GITLAB_GLOBAL_NAMESPACE_ID" "12"
#
appendToBashRC "TIDEXA_GIT_GLOBAL_ASSIGNEE_ID" "5"
git config --global push.default simple
# Diff tool meld
git config --global diff.tool meld
# Mantém as credencias em cache por uma hora. Utilizado em https para não ficar pedindo
# usuário e senha toda hora
git config --global credential.helper 'cache --timeout=3600'
